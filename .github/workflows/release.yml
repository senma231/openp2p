name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'dev'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.0'

      - name: Get Version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          else
            echo "VERSION=dev-$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_ENV
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: Release ${{ env.VERSION }}
          draft: false
          prerelease: ${{ github.ref != 'refs/tags/*' }}

      - name: Create release directory
        run: mkdir -p release/${{ env.VERSION }}

      - name: Build Clients
        run: |
          cd source
          # Windows
          GOOS=windows GOARCH=amd64 go build -o "../release/${{ env.VERSION }}/openp2p-windows-amd64.exe" ./cmd/openp2p.go
          # Linux
          GOOS=linux GOARCH=amd64 go build -o "../release/${{ env.VERSION }}/openp2p-linux-amd64" ./cmd/openp2p.go
          # macOS Intel
          GOOS=darwin GOARCH=amd64 go build -o "../release/${{ env.VERSION }}/openp2p-macos-amd64" ./cmd/openp2p.go
          # macOS Apple Silicon
          GOOS=darwin GOARCH=arm64 go build -o "../release/${{ env.VERSION }}/openp2p-macos-arm64" ./cmd/openp2p.go
          cd ..

      - name: Copy documentation and config files
        run: |
          cp README.md "release/${{ env.VERSION }}/"
          cp VERSION.md "release/${{ env.VERSION }}/"
          cp 客户端安装指南.md "release/${{ env.VERSION }}/"
          cp source/config.json.example "release/${{ env.VERSION }}/config.json"

      - name: Create ZIP archives
        run: |
          cd "release/${{ env.VERSION }}"
          zip -r "../openp2p-windows-amd64-${{ env.VERSION }}.zip" openp2p-windows-amd64.exe README.md VERSION.md 客户端安装指南.md config.json
          zip -r "../openp2p-linux-amd64-${{ env.VERSION }}.zip" openp2p-linux-amd64 README.md VERSION.md 客户端安装指南.md config.json
          zip -r "../openp2p-macos-amd64-${{ env.VERSION }}.zip" openp2p-macos-amd64 README.md VERSION.md 客户端安装指南.md config.json
          zip -r "../openp2p-macos-arm64-${{ env.VERSION }}.zip" openp2p-macos-arm64 README.md VERSION.md 客户端安装指南.md config.json
          cd ../..

      - name: Create release notes
        run: |
          cat > "release/release_notes_${{ env.VERSION }}.md" << EOF
          # OpenP2P ${{ env.VERSION }} 发布说明
          
          ## 更新内容
          
          - 修复了用户信息页面问题，支持显示和修改用户信息
          - 修复了节点管理功能，支持添加、编辑和删除节点
          - 优化了客户端配置，移除了不必要的字段
          - 添加了详细的客户端配置文档
          - 其他 bug 修复和性能优化
          
          ## 下载
          
          - [Windows 64位](openp2p-windows-amd64-${{ env.VERSION }}.zip)
          - [Linux 64位](openp2p-linux-amd64-${{ env.VERSION }}.zip)
          - [macOS Intel](openp2p-macos-amd64-${{ env.VERSION }}.zip)
          - [macOS Apple Silicon](openp2p-macos-arm64-${{ env.VERSION }}.zip)
          
          ## 安装说明
          
          请参考压缩包中的 \`客户端安装指南.md\` 文件。
          
          ## 配置说明
          
          默认配置文件为 \`config.json\`，您可以根据需要修改。
          主要配置项说明：
          
          - server: 服务器地址（必填）
          - port: 服务器端口，默认27183
          - name: 节点名称，建议填写，方便识别
          - token: 节点令牌，必填，用于身份验证
          - log_level: 日志级别（0=关闭，1=错误，2=信息，3=调试）
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release/openp2p-windows-amd64-${{ env.VERSION }}.zip
            release/openp2p-linux-amd64-${{ env.VERSION }}.zip
            release/openp2p-macos-amd64-${{ env.VERSION }}.zip
          body_path: release/release_notes_${{ env.VERSION }}.md
          token: ${{ secrets.GITHUB_TOKEN }}